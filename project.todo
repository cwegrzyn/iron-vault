Datasworn:
  ☐ Validate against datasworn schema

Oracles:
  ✔ better formatting for complex results @done(23-10-03 16:21)
  ✔ oracle block should encode enough info that it doesn't need original tables @done(23-10-03 14:30)
  ✔ button to re-roll an oracle @done(23-10-02 16:23)
  ☐ When a roll has suggestions, make it possible to build on those suggestions (example: starforged/oracles/campaign/inciting_incident/96-100)
  ☐ Usage (Max Rolls, Allow duplicates), e.g. starforged/oracles/characters/revealed_aspect
  Make roll YAML more compact:
    ☐ Allow results to be single string or array (and then convert to array in zod)
    ☐ For template rolls, shorten the key name (and update template string)
    ☐ Shorten some of the property names?
  View:
    ✔ Some sort of mechanism for seeing different options for a roll instead of putting it directly into the document. @high @done(23-11-15 21:32)
      So like a modal that displays different variants after you select it. Or maybe suggestions?
  Formatting:
    ☐ Prompt for a question -- maybe after the result dialog?
    ✔ Include full path in oracle block (Derelicts: Access: Feature vs Feature) @done(24-01-22 23:13)

Entity generation:
  Add additional entity specs:
    ☐ Faction
  ☐ Handle multi-valued (recommended roll count)
  What to do with result:
    ☐ Some model of generating a templater page? (use as an API?)
    ☐ Allow providing a template for the inline value
    ☐ Allow options on dialog: create page; create page and insert link; insert directly as callout

Moves:
  Move list:
    ☐ Indicate which asset a move comes from (when it comes from an asset)
  Move modal:
    ✔ Burn momentum @done(23-12-27 05:49)
  Move stats:
    ✔ Highlight suggested stats (based on move triggers) @done(24-03-02 15:11)
    ☐ Incorporate asset modifications into suggested stats
  Move render:
    ✔ Display outcome information in move renderer (or make it possible to show it on mouseover?) @done(24-04-29 14:09)
  Move block:
    ☐ Store moves by id instead of name? Or both?
    ✔ Create compact spec @done(24-04-29 14:09)

Characters:
  Core:
    ✔ Validate schema @done(24-02-21 21:42)
  ☐ deal with multiple characters (find all of the places where i just hardcode to taking first)
  ✔ Manage momentum @done(23-10-02 16:23)
  ✔ Abstract out deriving stats and meters from the datasworn ruleset information @done(24-02-21 21:43)
    This might mean we remove the static compile time stat info, but tbh that's fine. Only momentum
    is special, and the datasworn info doesn't even include momentum.
  Assets:
    ☐ Add asset tracks to track list

Progress Tracks Refactor:
  ✔ Create generic indexer framework to process game objects @done(24-01-03 12:58)
  ✔ Move character to that framework @done(24-01-03 12:58)
  ✔ Create indexer for vows @done(24-01-14 14:47)
  ✔ Create indexer for clocks @done(24-01-20 22:38)
  ✔ Create a progress track: @done(24-01-21 22:22)
    ✔ Simple modal @done(24-01-21 22:22)
  ✔ Add hint to "advance track" steps suggest dialog that explains what you are typing @done(24-01-20 22:47)
  ☐ Create a clock
  Special tracks:
    ✔ Support legacy tracks on character @done(24-03-01 22:37)
    ✔ Initial command initially -- but maybe combine later? @done(24-03-01 22:37)

Refactors:
  ☐ Move indexes/indexers? into datastore?

Other:
  ☐ Investigate using https://eemeli.org/yaml/#yaml to manipulate frontmatter without rewriting
