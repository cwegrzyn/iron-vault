import { typecheckPlugin } from "@jgoz/esbuild-plugin-typecheck";
import builtins from "builtin-modules";
import esbuild from "esbuild";
import { copy } from "esbuild-plugin-copy";
import process from "process";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = process.argv[2] === "production";

const context = await esbuild.context({
  banner: {
    js: banner,
  },
  entryPoints: ["src/index.ts"],
  bundle: true,
  external: [
    "obsidian",
    "electron",
    "@codemirror/autocomplete",
    "@codemirror/collab",
    "@codemirror/commands",
    "@codemirror/language",
    "@codemirror/lint",
    "@codemirror/search",
    "@codemirror/state",
    "@codemirror/view",
    "@lezer/common",
    "@lezer/highlight",
    "@lezer/lr",
    ...builtins,
  ],
  format: "cjs",
  target: "es2022",
  logLevel: "info",
  sourcemap: prod ? false : "inline",
  treeShaking: true,
  outfile: prod ? "main.js" : "test-vault/.obsidian/plugins/iron-vault/main.js",
  plugins: [
    typecheckPlugin({ watch: !prod }),

    ...(prod
      ? []
      : [
          copy({
            // this is equal to process.cwd(), which means we use cwd path as base path to resolve `to` path
            // if not specified, this plugin uses ESBuild.build outdir/outfile options as base path.
            resolveFrom: "cwd",
            assets: [
              {
                from: ["manifest.json"],
                to: ["./test-vault/.obsidian/plugins/iron-vault/manifest.json"],
              },
              {
                from: [".hotreload"],
                to: ["./test-vault/.obsidian/plugins/iron-vault/.hotreload"],
              },
              {
                from: ["./test-vault/.obsidian/plugins/iron-vault/main.js"],
                to: ["./docs/.obsidian/plugins/iron-vault/main.js"],
              },
            ],
            watch: true,
          }),
        ]),
  ],
});

const cssCtx = await esbuild.context({
  entryPoints: ["src/styles.css"],
  bundle: true,
  sourcemap: prod ? false : "inline",
  outfile: prod
    ? "styles.css"
    : "test-vault/.obsidian/plugins/iron-vault/styles.css",
  loader: {
    ".svg": "dataurl",
  },
  plugins: [
    ...(prod
      ? []
      : [
          copy({
            // this is equal to process.cwd(), which means we use cwd path as base path to resolve `to` path
            // if not specified, this plugin uses ESBuild.build outdir/outfile options as base path.
            resolveFrom: "cwd",
            assets: [
              {
                from: ["./test-vault/.obsidian/plugins/iron-vault/styles.js"],
                to: ["./docs/.obsidian/plugins/iron-vault/styles.css"],
              },
            ],
            watch: true,
          }),
        ]),
  ],
});

if (prod) {
  await Promise.all([context.rebuild(), cssCtx.rebuild()]);
  process.exit(0);
} else {
  await Promise.all([context.watch(), cssCtx.watch()]);
}
